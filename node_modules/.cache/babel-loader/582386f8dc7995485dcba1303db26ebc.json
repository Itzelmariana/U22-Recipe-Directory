{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nexport default function useFetch(url) {\n  _s();\n\n  const [data, setData] = useState(null);\n  const [isPending, setIsPending] = useState(false);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const controller = new AbortController();\n\n    const fetchData = async () => {\n      setIsPending(true);\n\n      try {\n        const res = await fetch(url, {\n          signal: controller.signal\n        });\n\n        if (!res.ok) {\n          throw new Error(res.statusText);\n        }\n\n        const json = await res.json();\n        setIsPending(false);\n        setData(json);\n        setError(null);\n      } catch (err) {\n        if (err.name === 'AbortError') {\n          console.log('Fetch was aborted');\n        } else {\n          setIsPending(false);\n          setError('Could not fetch data');\n          console.log(err.message);\n        }\n      }\n    };\n\n    fetchData();\n    return () => {\n      controller.abort();\n    };\n  }, [url]);\n  return {\n    data,\n    isPending,\n    error\n  };\n}\n\n_s(useFetch, \"Nv+1/iI0zq+2TB3Cnf0Mf/1lILU=\");","map":{"version":3,"sources":["/Users/itzel/Desktop/Udemy/05 React and Firebase/11-recipe-directory/src/hooks/useFetch.js"],"names":["useEffect","useState","useFetch","url","data","setData","isPending","setIsPending","error","setError","controller","AbortController","fetchData","res","fetch","signal","ok","Error","statusText","json","err","name","console","log","message","abort"],"mappings":";;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AAEA,eAAe,SAASC,QAAT,CAAkBC,GAAlB,EAAuB;AAAA;;AACpC,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBJ,QAAQ,CAAC,IAAD,CAAhC;AACA,QAAM,CAACK,SAAD,EAAYC,YAAZ,IAA4BN,QAAQ,CAAC,KAAD,CAA1C;AACA,QAAM,CAACO,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,CAAC,IAAD,CAAlC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMU,UAAU,GAAG,IAAIC,eAAJ,EAAnB;;AACA,UAAMC,SAAS,GAAG,YAAY;AAC5BL,MAAAA,YAAY,CAAC,IAAD,CAAZ;;AAEA,UAAI;AACF,cAAMM,GAAG,GAAG,MAAMC,KAAK,CAACX,GAAD,EAAM;AAAEY,UAAAA,MAAM,EAAEL,UAAU,CAACK;AAArB,SAAN,CAAvB;;AACA,YAAI,CAACF,GAAG,CAACG,EAAT,EAAa;AACX,gBAAM,IAAIC,KAAJ,CAAUJ,GAAG,CAACK,UAAd,CAAN;AACD;;AACD,cAAMC,IAAI,GAAG,MAAMN,GAAG,CAACM,IAAJ,EAAnB;AAEAZ,QAAAA,YAAY,CAAC,KAAD,CAAZ;AACAF,QAAAA,OAAO,CAACc,IAAD,CAAP;AACAV,QAAAA,QAAQ,CAAC,IAAD,CAAR;AACD,OAVD,CAUE,OAAOW,GAAP,EAAY;AACZ,YAAIA,GAAG,CAACC,IAAJ,KAAa,YAAjB,EAA+B;AAC7BC,UAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ;AACD,SAFD,MAEO;AACLhB,UAAAA,YAAY,CAAC,KAAD,CAAZ;AACAE,UAAAA,QAAQ,CAAC,sBAAD,CAAR;AACAa,UAAAA,OAAO,CAACC,GAAR,CAAYH,GAAG,CAACI,OAAhB;AACD;AACF;AACF,KAtBD;;AAwBAZ,IAAAA,SAAS;AACT,WAAO,MAAM;AACXF,MAAAA,UAAU,CAACe,KAAX;AACD,KAFD;AAGD,GA9BQ,EA8BN,CAACtB,GAAD,CA9BM,CAAT;AAgCA,SAAO;AAAEC,IAAAA,IAAF;AAAQE,IAAAA,SAAR;AAAmBE,IAAAA;AAAnB,GAAP;AACD;;GAtCuBN,Q","sourcesContent":["import { useEffect, useState } from 'react';\n\nexport default function useFetch(url) {\n  const [data, setData] = useState(null);\n  const [isPending, setIsPending] = useState(false);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const controller = new AbortController();\n    const fetchData = async () => {\n      setIsPending(true);\n\n      try {\n        const res = await fetch(url, { signal: controller.signal });\n        if (!res.ok) {\n          throw new Error(res.statusText);\n        }\n        const json = await res.json();\n\n        setIsPending(false);\n        setData(json);\n        setError(null);\n      } catch (err) {\n        if (err.name === 'AbortError') {\n          console.log('Fetch was aborted');\n        } else {\n          setIsPending(false);\n          setError('Could not fetch data');\n          console.log(err.message);\n        }\n      }\n    };\n\n    fetchData();\n    return () => {\n      controller.abort();\n    };\n  }, [url]);\n\n  return { data, isPending, error };\n}\n"]},"metadata":{},"sourceType":"module"}